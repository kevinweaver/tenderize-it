{"ast":null,"code":"var _jsxFileName = \"/Users/kevinweaver/github.com/kevinweaver/tenderize-it/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Body, Button, Header, Image, Link } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal';\nimport logo from \"./ethereumLogo.png\";\nimport { MAINNET_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport GET_AGGREGATED_UNISWAP_DATA from \"./graphql/subgraph\";\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider(); // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n\n  const daiWethExchangeContract = new Contract(addresses[MAINNET_ID].pairs[\"DAI-WETH\"], abis.pair, defaultProvider); // Reserves held in the DAI-WETH pair contract\n\n  const reserves = await daiWethExchangeContract.getReserves();\n  console.log({\n    reserves\n  });\n}\n\nfunction WalletButton({\n  provider,\n  loadWeb3Modal\n}) {\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!provider) {\n        loadWeb3Modal();\n      } else {\n        logoutOfWeb3Modal();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !provider ? \"Connect Wallet\" : \"Disconnect Wallet\");\n}\n\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AGGREGATED_UNISWAP_DATA);\n  const [provider, setProvider] = useState();\n  /* Open wallet selection modal. */\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n  /* If user has loaded a wallet before, load it automatically. */\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  React.useEffect(() => {\n    if (!loading && !error && data && data.uniswapFactories) {\n      console.log({\n        uniswapFactories: data.uniswapFactories\n      });\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WalletButton, {\n    provider: provider,\n    loadWeb3Modal: loadWeb3Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: logo,\n    alt: \"react-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }\n  }, \"packages/react-app/src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(Button, {\n    hidden: true,\n    onClick: () => readOnChainData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Read On-Chain Reserves\"), /*#__PURE__*/React.createElement(Link, {\n    href: \"https://ethereum.org/developers/#getting-started\",\n    style: {\n      marginTop: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Learn Ethereum\"), /*#__PURE__*/React.createElement(Link, {\n    href: \"https://reactjs.org\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Learn React\"), /*#__PURE__*/React.createElement(Link, {\n    href: \"https://uniswap.org/docs/v2/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Learn Uniswap v2\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinweaver/github.com/kevinweaver/tenderize-it/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","Contract","Web3Provider","getDefaultProvider","useQuery","Body","Button","Header","Image","Link","web3Modal","logoutOfWeb3Modal","logo","MAINNET_ID","addresses","abis","GET_AGGREGATED_UNISWAP_DATA","readOnChainData","defaultProvider","daiWethExchangeContract","pairs","pair","reserves","getReserves","console","log","WalletButton","provider","loadWeb3Modal","App","loading","error","data","setProvider","newProvider","connect","cachedProvider","uniswapFactories","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { Body, Button, Header, Image, Link } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal'\nimport logo from \"./ethereumLogo.png\";\n\nimport { MAINNET_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport GET_AGGREGATED_UNISWAP_DATA from \"./graphql/subgraph\";\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider();\n  // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n  const daiWethExchangeContract = new Contract(addresses[MAINNET_ID].pairs[\"DAI-WETH\"], abis.pair, defaultProvider);\n  // Reserves held in the DAI-WETH pair contract\n  const reserves = await daiWethExchangeContract.getReserves();\n  console.log({ reserves });\n}\n\nfunction WalletButton({ provider, loadWeb3Modal }) {\n  return (\n    <Button\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {!provider ? \"Connect Wallet\" : \"Disconnect Wallet\"}\n    </Button>\n  );\n}\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_AGGREGATED_UNISWAP_DATA);\n  const [provider, setProvider] = useState();\n\n  /* Open wallet selection modal. */\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n\n  /* If user has loaded a wallet before, load it automatically. */\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.uniswapFactories) {\n      console.log({ uniswapFactories: data.uniswapFactories });\n    }\n  }, [loading, error, data]);\n\n  return (\n    <div>\n      <Header>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} />\n      </Header>\n      <Body>\n        <Image src={logo} alt=\"react-logo\" />\n        <p>\n          Edit <code>packages/react-app/src/App.js</code> and save to reload.\n        </p>\n        {/* Remove the \"hidden\" prop and open the JavaScript console in the browser to see what this function does */}\n        <Button hidden onClick={() => readOnChainData()}>\n          Read On-Chain Reserves\n        </Button>\n        <Link\n          href=\"https://ethereum.org/developers/#getting-started\"\n          style={{ marginTop: \"8px\" }}\n        >\n          Learn Ethereum\n        </Link>\n        <Link href=\"https://reactjs.org\">Learn React</Link>\n        <Link href=\"https://uniswap.org/docs/v2/\" >Learn Uniswap v2</Link>\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}